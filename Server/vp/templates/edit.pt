<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="utf-8">
    <style>
        #dropzone{
            position: absolute;
            top: 50%;
            left: 50%;
            width: 20%;
            background-color: #ccc;
            text-align: center;
            border: 3px dashed #bbb;
            border-radius: 15%;
        }
        #dropzone:before{
            content: "";
            display: block;
            padding-top: 100%;
        }
        #content{
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
        }

    </style>
    <!--- JQUERY muss noch eingebunden werden,
    auslagern von dem ganzen Code in eigene Dateien --->
    <script>
        <!-- /* Wenn der Browser JS nicht versteht, wird der Code nicht angezeigt sondern als Kommentar betrachtet. JS ignoriert den Kommentaranfang einfach. */
        
        /* Versuch, Drag and Drop mit jQuery/CSS ohne weitere Bibliotheken hinzubekommen */


        /* Browser machen sehr merkwürdige Sachen, 
        wenn man keine Default-Events verhindert

        evtl. highlighting der Box
        */
        $('#dropzone').on(
            'dragover',
            function(e) {
                e.preventDefault();
                e.stopPropagation();
            }
        )
        $('#dropzone').on(
            'dragenter',
            function(e) {
                e.preventDefault();
                e.stopPropagation();
            }
        )

        /* Eigentliches Dropevent fangen */
        $('#dropzone').on(
            'drop',
            function(e){
                if(e.originalEvent.dataTransfer){
                    /* .files sind alle gedroppten Dateien */

                    /* Überprüfen ob >= eine Datei im Array ist*/
                    if(e.originalEvent.dataTransfer.files.length) {
                        /* Defaultzeug*/
                        e.preventDefault();
                        e.stopPropagation();
                        /* Das hier sollte alles hochladen, ich hab keine Ahnung ob das funktioniert */
                        upload(files);
                    }   
                }
            }
        );

        /* teilweise geklaut von http://stackoverflow.com/questions/15552112/add-input-of-type-file-to-a-form-dynamically */
        function upload(files) {

            /* Suche ersten formTag auf der Seite */
            var formData = new FormData($("form")[0]);

            /* Dateien an POST anhängen*/
            for( var i = 0; i < files.length; ++i ) {
                var file = files[i];
                formData.append("file" + (i+1), file);
            }

            /* Wie Klick auf den Submit-Button*/
            return $.ajax({
                url: "/* URL hierhin */",
                type: "POST",
                data: formData,
                processData: false,
                contentType: false,
                success: function() {
                    /* Irgendein DIV mit message anzeigen */
                }

            });
        }
        -->
    </script>
</head>
<body>
    <!--
        # The formtarget Attribute
        # The formtarget attribute specifies a name or a keyword that indicates where to 
        # display the response that is received after submitting the form.
        #
        # The formtarget attribute overrides the target attribute of the <form> element.
        #
        # The formtarget attribute can be used with type="submit" and type="image".

        Es könnte fürs Design gut funktionieren, die Antwort auf den Post auf ner extra Seite darzustellen, mit der JS-DragnDrop oben würde man einfach ne andere url übergeben
    -->
    <a href="${request.route_path('start', _query='logout')}">Abmelden</a> <!-- Der Logout-Link -->
    <form action="${request.path}" method="post" accept-charset="utf-8" enctype="multipart/form-data">
        <input id="file" type="file" name="file" value="" />
        <input type="submit" name="form.submitted" value="Hochladen" />
    </form>
    <div id="info" tal:switch="info">
        <span style="color: blue" tal:case="'success'">Upload erfolgreich!</span>
        <span style="color: red" tal:case="'error'">Upload fehlgeschlagen!</span>
        <span tal:case="default">Laden sie ihre Datei hoch.</span>
    </div>
    <div id="dropzone">
        <div id="content">
            Drop Files Here<!-- Ich hab der Box nen 1:1 Seitenverhältnis gegeben, und jetzt lässt sich der Text nicht mehr mit padding vertikal zentrieren... Ich weiß nicht, was es außer line-height: 100%; vertical-align: center; noch für möglichkeiten gibt -->
        </div>
    </div>
</body>
</html>